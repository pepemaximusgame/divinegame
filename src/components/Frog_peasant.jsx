/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/frog_peasant.glb -o src/components/Frog_peasant.jsx -k -K -r public 
Author: SmugglersStudio (https://sketchfab.com/SmugglersStudio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/frog-peasant-b06af7ff11eb485bbbcb248d2f5427f5
Title: Frog Peasant
*/

import React, { useEffect, useRef } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import * as THREE from 'three';

export function Frog_peasant({animation,color,...props}) {
  const group =useRef();
  const { scene, animations } = useGLTF('/models/frog_peasant.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)


  useEffect(() => {
    console.log('Loaded Materials:', materials);
    actions[animation]?.reset().fadeIn(0.24).play();
    return () => actions?.[animation]?.fadeOut(0.24);
  }, [animation]);

useEffect(() => {
    if (materials['frog-peasant']) {
      materials['frog-peasant'].color = new THREE.Color(color);
      materials['frog-peasant'].needsUpdate = true; // Important for the change to take effect
    }
  }, [materials, color]); // Re-run if materials load or color prop changes


  return (
    <group ref={group} {...props} >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={1.283}>
          <group name="frog-peasantfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="root" position={[-9.44, -26.253, 13.492]} rotation={[-1.521, -0.131, -0.875]}>
                  <group name="Object_5">
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_29" position={[-9.44, -26.253, 13.492]} rotation={[-1.521, -0.131, -0.875]} />
                    <skinnedMesh name="Object_30" geometry={nodes.Object_30.geometry} material={materials['frog-peasant']} skeleton={nodes.Object_30.skeleton} />
                  </group>
                </group>
                <group name="retop" position={[-9.44, -26.253, 13.492]} rotation={[-1.521, -0.131, -0.875]} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/frog_peasant.glb')
